version: '3.8'

services:
  # Enhanced PostgreSQL Database with Production Optimizations
  postgres:
    image: postgres:15-alpine
    container_name: postgres-xmarketing
    environment:
      POSTGRES_DB: x_marketing_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      POSTGRES_SHARED_PRELOAD_LIBRARIES: "pg_stat_statements"
      POSTGRES_MAX_CONNECTIONS: "200"
      POSTGRES_SHARED_BUFFERS: "256MB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "1GB"
      POSTGRES_MAINTENANCE_WORK_MEM: "64MB"
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: "0.9"
      POSTGRES_WAL_BUFFERS: "16MB"
      POSTGRES_DEFAULT_STATISTICS_TARGET: "100"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./logs/postgres:/var/log/postgresql
    networks:
      - x-marketing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d x_marketing_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  # Enhanced Redis with Production Configuration
  redis:
    image: redis:7-alpine
    container_name: redis-xmarketing
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    networks:
      - x-marketing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s


  # Enhanced Backend API with Production Configuration
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-xmarketing
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/x_marketing_platform
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_jwt_key_here_change_in_production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your_32_character_encryption_key_here}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs/backend:/app/logs
    networks:
      - x-marketing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s


  # Additional services can be added here when ready
  # frontend, telegram-bot, llm-service, etc.

volumes:
  postgres_data:
  redis_data:

networks:
  x-marketing-network:
    driver: bridge
